#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_colemak.h"

#define QWERTY 0
#define NUM 1
#define SYM 2
#define NAV 3
#define ADJUST 4

&lt {
  tapping-term-ms = <200>;
  quick_tap_ms = <150>;
  flavor = "hold-preferred";
};

&mt {
  tapping-term-ms = <150>;
  compatible = "zmk,behavior-hold-tap";
  #binding-cells = <2>;
  quick-tap-ms = <150>;
  flavor = "balanced";
};

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
  };

  keymap {
        compatible = "zmk,keymap";

                default_layer {
// /--------------------------------------------------------------\       /-----------------------------------------------------------\
// |   ESC        |    Q    |    W   |   E    |    R    |    T    |       |   Y   |    U    |    I    |    O    |     P    |    \     |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   CTRL/Tab   |    A    |    S   |   D    |    F    |    G    |       |   H   |    J    |    K    |    L    |     ;    |     '    |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   ALT        |    Z    |    X   |   C    |    V    |    B    |       |   N   |    M    |    ,    |    .    |     /    | ` | ALT  |
// \---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------/
//                                   |  GUI   | SPC/SHFT|   ESC   |       |  ENT  | SPC/SHFT|  CAPS   |
//                                   \--------+---------+---------/       \-------+---------+---------/

                        bindings = <
   &mt LGUI GRAVE   &kp Q          &kp W   &kp E     &kp R        &kp T            &kp Y        &kp U       &kp I        &kp O     &kp P            &kp LBKT
   &mt LCTRL TAB    &kp A          &kp S   &kp D     &kp F        &kp G            &kp H        &kp J       &kp K        &kp L     &kp SEMI         &kp SQT
   &kp LALT         &mt LSHIFT Z   &kp X   &kp C     &kp V        &kp B            &kp N        &kp M       &kp COMMA    &kp DOT   &mt RSHIFT FSLH  &mt RALT BSLH
                                           &mo NUM   &kp SPACE    &lt SYM ESC      &lt SYM RET  &kp SPACE   &lt NUM BSPC
                        >;
                };


                num_layer {
// /--------------------------------------------------------------\       /-----------------------------------------------------------\
// |              |    F12   |    F7  |   F8   |    F9   |    x   |       |   +   |    7    |    8    |    9    |     *    |          |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |              |    F11   |    F4  |   F5   |    F6   |    x   |       |   -   |    4    |    5    |    6    |     /    |          |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |              |    F10   |    F1  |   F2   |    F3   |    x   |       |   .   |    1    |    2    |    3    |     0    |          |
// \---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------/
//                                   |        |         |         |       |       |         |         |
//                                   \--------+---------+---------/       \-------+---------+---------/
                        bindings = <
   &trans   &kp F12         &kp F7  &kp F8   &kp F9   &kp X            &kp PLUS    &kp N7    &kp N8   &kp N9    &kp ASTRK       &trans
   &trans   &kp F11         &kp F4  &kp F5   &kp F6   &kp X            &kp MINUS   &kp N4    &kp N5   &kp N6    &kp SLASH       &trans
   &trans   &mt LSHIFT F10  &kp F1  &kp F2   &kp F3   &kp X            &kp DOT     &kp N1    &kp N2   &kp N3    &mt RSHIFT N0   &trans
                                    &mo NAV  &trans   &trans           &trans      &trans    &trans
                        >;
                };

                sym_layer {
// /----------------------------------------------------------------\       /-----------------------------------------------------------------\
// |                |   !   |   @    |   #    |    $     |    %     |       |    ^    |    &     |    *    |    +    |    -     |             |
// |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
// |                |   "   |   ~    |   {    |    (     |    [     |       |    x    |    :     |    ;    |    =    |    \     |             |
// |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
// |                |   '   |   `    |   }    |    )     |    ]     |       |    _    |    |     |    <    |    >    |    ?     |             |
// \---------------------------------+--------+----------+----------+       |---------+----------+---------+----------------------------------/
//                                   |        |          |          |       |         |          |         |
//                                   \--------+----------+----------/       \---------+----------+---------/

                        bindings = <
   &trans   &kp EXCL   &kp AT      &kp HASH   &kp DLLR   &kp PRCNT         &kp CARET   &kp AMPS    &kp ASTRK    &kp PLUS    &kp MINUS   &trans
   &trans   &kp DQT    &kp TILDE   &kp LBRC   &kp LPAR   &kp LBKT          &kp X       &kp CM_COLN &kp CM_SCLN  &kp EQUAL   &kp BSLH    &trans
   &trans   &kp APOS   &kp GRAVE   &kp RBRC   &kp RPAR   &kp RBKT          &kp UNDER   &kp PIPE    &kp LT       &kp GT      &kp QMARK   &trans
                                   &trans     &trans     &trans            &trans      &trans      &trans
                        >;
                };

                nav_layer {
// /--------------------------------------------------------\       /--------------------------------------------------------------\
// |         | BTCLR  |        | BT PRV | BT NXT  |  VOL +  |       |  PGUP  |  CLEFT |   UP    |  CRIGHT |   HOME   |             |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
// |         |  BT1   |  BT2   |  BT3   |  BT4    |  BT5    |       |  PGDWN |  LEFT  |   DOWN  |  RIGHT  |  INSERT  |             |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
// |         |        |        |        |         |  VOL -  |       |  CPWRD |        |         |         |   END    |             |
// \---------------------------+--------+---------+---------+       |--------+--------+---------+----------------------------------/
//                             |        |         |         |       |        |        |         |
//                             \--------+---------+---------/       \--------+--------+---------/

                        bindings = <
   &trans   &bt BT_CLR    &none         &bt BT_PRV     &bt BT_NXT     &kp C_VOLUME_UP      &kp PG_UP     &kp LC(LEFT) &kp UP     &kp LC(RIGHT) &kp HOME   &trans
   &trans   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4         &kp PG_DN     &kp LEFT     &kp DOWN   &kp RIGHT     &kp INS    &trans
   &trans   &none         &none         &none          &none          &kp C_VOLUME_DOWN    &caps_word    &none        &none      &none         &kp END    &trans
                                        &trans         &trans         &trans               &trans        &trans       &trans
                        >;
                };
    };
};
