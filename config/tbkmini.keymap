#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include "keymap_colemak.h"

#define QWERTY 0
#define NUM 1
#define SYM 2
#define NAV 3
#define ADJUST 4

#define L_KEYS 0 1 2 3 4 5 12  13  14  15  16  17 24  25  26  27  28  29
#define R_KEYS 6 7 8 9 10 11 18  19  20  21  22  23 30  31  32  33  34  35
#define THUMBS 36 37 38 39 40 41

&lt {
  tapping-term-ms = <200>;
  quick_tap_ms = <150>;
  flavor = "tap-preferred";
};

&mt {
  tapping-term-ms = <175>;
  compatible = "zmk,behavior-hold-tap";
  #binding-cells = <2>;
  quick-tap-ms = <150>;
  flavor = "tap-preferred";
};

&caps_word {
    /delete-property/ ignore-modifiers;
    continue-list = <UNDERSCORE MINUS Y>;
};

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
  };

  behaviors {
        lhm: left_home_row_mods {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <R_KEYS THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };

        rhm: right_home_row_mods {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;                // repeat on tap-into-hold
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <L_KEYS THUMBS>;
            hold-trigger-on-release;             // delay positional check until key-release
        };
    };

  macros {
        dup: dup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp DOT &kp DOT &kp FSLH>
                ;
        };
    };

  keymap {
        compatible = "zmk,keymap";

                default_layer {
// /--------------------------------------------------------------\       /-----------------------------------------------------------\
// |   ESC        |    Q    |    W   |   E    |    R    |    T    |       |   Y   |    U    |    I    |    O    |     P    |    \     |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   CTRL/Tab   |    A    |    S   |   D    |    F    |    G    |       |   H   |    J    |    K    |    L    |     ;    |     '    |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |   ALT        |    Z    |    X   |   C    |    V    |    B    |       |   N   |    M    |    ,    |    .    |     /    | ` | ALT  |
// \---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------/
//                                   |  GUI   | SPC/SHFT|   ESC   |       |  ENT  | SPC/SHFT|  CAPS   |
//                                   \--------+---------+---------/       \-------+---------+---------/

                        bindings = <
   &kp GRAVE   &lhm RALT Q    &kp W         &kp E         &kp R         &kp T            &kp Y    &kp U        &kp I         &kp O           &rhm RALT P     &kp LBKT
   &kp CLCK    &lt SYM A      &lhm LALT S   &lhm LSFT D   &lhm LCTL F   &kp G            &kp H    &rhm RCTL J  &rhm RSFT K   &rhm LALT L     &lt SYM SEMI    &kp SQT
   &kp LALT    &lhm LGUI Z    &kp X         &kp C         &kp V         &kp B            &kp N    &kp M        &kp COMMA     &kp DOT         &rhm LGUI FSLH  &kp BSLH
                                            &lt NUM TAB   &kp SPACE     &kp ESC          &kp RET  &kp SPACE    &lt NUM BSPC
                        >;
                };

//                        bindings = <
//   &kp GRAVE        &mt LGUI Q    &kp W    &kp E          &kp R              &kp T            &kp Y        &kp U             &kp I         &kp O      &kp P       &kp LBKT
//   &mt LCTL CLCK    &kp A         &kp S    &kp D          &kp F              &kp G            &kp H        &kp J             &kp K         &kp L      &kp SEMI    &mt RCTL SQT
//   &kp LALT         &kp Z         &kp X    &kp C          &kp V              &kp B            &kp N        &kp M             &kp COMMA     &kp DOT    &kp FSLH    &mt RALT BSLH
//                                           &lt NUM TAB    &mt LSFT SPACE     &lt SYM ESC      &lt SYM RET  &mt RSFT SPACE    &lt NUM BSPC
//                        >;
//                };

                num_layer {
// /--------------------------------------------------------------\       /-----------------------------------------------------------\
// |              |    F12   |    F7  |   F8   |    F9   |    x   |       |   +   |    7    |    8    |    9    |     *    |          |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |              |    F11   |    F4  |   F5   |    F6   |    x   |       |   -   |    4    |    5    |    6    |     /    |          |
// |--------------+---------+--------+--------+---------+---------|       |-------+---------+---------+---------+----------+----------|
// |              |    F10   |    F1  |   F2   |    F3   |    x   |       |   .   |    1    |    2    |    3    |     0    |          |
// \---------------------------------+--------+---------+---------+       |-------+---------+---------+-------------------------------/
//                                   |        |         |         |       |       |         |         |
//                                   \--------+---------+---------/       \-------+---------+---------/
                        bindings = <
   &trans   &kp F12         &kp F7  &kp F8   &kp F9   &kp X            &kp PLUS    &kp N7    &kp N8   &kp N9    &kp ASTRK       &trans
   &trans   &kp F11         &kp F4  &kp F5   &kp F6   &kp X            &kp MINUS   &kp N4    &kp N5   &kp N6    &kp SLASH       &trans
   &trans   &mt LSHIFT F10  &kp F1  &kp F2   &kp F3   &kp X            &kp DOT     &kp N1    &kp N2   &kp N3    &mt RSHIFT N0   &trans
                                    &mo NAV  &trans   &trans           &trans      &trans    &trans
                        >;
                };

                sym_layer {
// /----------------------------------------------------------------\       /-----------------------------------------------------------------\
// |                |   '   |   <    |   >    |    "     |    .     |       |    &    |    _?    |    [    |    ]    |    %     |             |
// |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
// |                |   !   |   -    |   +    |    =     |    #     |       |    |    |    :     |    (    |    )    |    ?     |             |
// |----------------+-------+--------+--------+----------+----------|       |---------+----------+---------+---------+----------+-------------|
// |                |   ^   |   /    |   *    |    \?    |    ../?  |       |    ~    |    $     |    {    |    }    |    @     |             |
// \---------------------------------+--------+----------+----------+       |---------+----------+---------+----------------------------------/
//                                   |        |          |          |       |         |          |         |
//                                   \--------+----------+----------/       \---------+----------+---------/

                        bindings = <
   &trans   &kp SQT    &kp LT      &kp GT     &kp DQT    &kp DOT           &kp AMPS    &kp UNDER   &kp LBKT    &kp RBKT    &kp PRCNT   &trans
   &trans   &kp EXCL   &kp MINUS   &kp PLUS   &kp EQUAL  &kp HASH          &kp PIPE    &kp CM_COLN &kp LPAR    &kp RPAR    &kp QMARK   &trans
   &trans   &kp CARET  &kp FSLH    &kp STAR   &kp BSLH   &dup              &kp TILDE   &kp DLLR    &kp LBRC    &kp RBRC    &kp AT      &trans
                                   &trans     &trans     &trans            &trans      &trans      &trans
                        >;
                };

                nav_layer {
// /--------------------------------------------------------\       /--------------------------------------------------------------\
// |         | BTCLR  |        | BT PRV | BT NXT  |  VOL +  |       |  PGUP  |  CLEFT |   UP    |  CRIGHT |   HOME   |             |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
// |         |  BT1   |  BT2   |  BT3   |  BT4    |  BT5    |       |  PGDWN |  LEFT  |   DOWN  |  RIGHT  |  INSERT  |             |
// |---------+--------+--------+--------+---------+---------|       |--------+--------+---------+---------+----------+-------------|
// |         |        |        |        |         |  VOL -  |       |  CPWRD |        |         |         |   END    |             |
// \---------------------------+--------+---------+---------+       |--------+--------+---------+----------------------------------/
//                             |        |         |         |       |        |        |         |
//                             \--------+---------+---------/       \--------+--------+---------/

                        bindings = <
   &trans   &bt BT_CLR    &none         &bt BT_PRV     &bt BT_NXT     &kp C_VOLUME_UP      &kp PG_UP     &kp LC(LEFT) &kp UP     &kp LC(RIGHT) &kp HOME   &trans
   &trans   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4         &kp PG_DN     &kp LEFT     &kp DOWN   &kp RIGHT     &kp INS    &trans
   &trans   &none         &none         &none          &none          &kp C_VOLUME_DOWN    &caps_word    &none        &none      &none         &kp END    &trans
                                        &trans         &trans         &trans               &trans        &trans       &trans
                        >;
                };
    };
};
